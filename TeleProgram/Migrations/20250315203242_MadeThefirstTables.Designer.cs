// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TeleProgram.Models;

#nullable disable

namespace TeleProgram.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250315203242_MadeThefirstTables")]
    partial class MadeThefirstTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TeleProgram.Models.Bills", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Coast")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PhoneNumber");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("TeleProgram.Models.Calls", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BillsId")
                        .HasColumnType("int");

                    b.Property<double>("Duration")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BillsId");

                    b.ToTable("Calls");
                });

            modelBuilder.Entity("TeleProgram.Models.Phones", b =>
                {
                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProgrameName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PhoneNumber");

                    b.HasIndex("ProgrameName");

                    b.ToTable("Phones");
                });

            modelBuilder.Entity("TeleProgram.Models.Programs", b =>
                {
                    b.Property<string>("ProgrameName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Charge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProgrameName");

                    b.ToTable("Programs");
                });

            modelBuilder.Entity("TeleProgram.Models.Bills", b =>
                {
                    b.HasOne("TeleProgram.Models.Phones", "Phones")
                        .WithMany("Bills")
                        .HasForeignKey("PhoneNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Phones");
                });

            modelBuilder.Entity("TeleProgram.Models.Calls", b =>
                {
                    b.HasOne("TeleProgram.Models.Bills", "Bills")
                        .WithMany("Calls")
                        .HasForeignKey("BillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bills");
                });

            modelBuilder.Entity("TeleProgram.Models.Phones", b =>
                {
                    b.HasOne("TeleProgram.Models.Programs", "Programs")
                        .WithMany("Phones")
                        .HasForeignKey("ProgrameName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Programs");
                });

            modelBuilder.Entity("TeleProgram.Models.Bills", b =>
                {
                    b.Navigation("Calls");
                });

            modelBuilder.Entity("TeleProgram.Models.Phones", b =>
                {
                    b.Navigation("Bills");
                });

            modelBuilder.Entity("TeleProgram.Models.Programs", b =>
                {
                    b.Navigation("Phones");
                });
#pragma warning restore 612, 618
        }
    }
}
